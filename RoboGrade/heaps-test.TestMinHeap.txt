-------------------
CSE247 Robot tester starts testing heaps on 2019-10-14 01:06:56 -0500

========
Testing in ./GradingRepos/repos/labs-puguohao: heaps as of 2019-10-05 00:05
========
Now in: /home/coles/git/cse247/cse247-support-f19/GradingRepos/repos/labs-puguohao
Your branch is up-to-date with 'origin/master'.
HEAD is now at 289380a robograde
No local changes to save

Updating 289380a..1928ab0
Fast-forward
 RoboGrade/heaps-test.TestExtractMin.txt | 233 ++++++++++++++++++++++++--------
 1 file changed, 179 insertions(+), 54 deletions(-)
Going back in time to: 2019-10-05 00:05
At hash aa044876428bb0d80546c37d651fdf5cce064cc8

Buildfile: /home/coles/git/cse247/cse247-support-f19/build.xml

copytest:
     [echo] would copy from /home/coles/git/cse247/cse247-f19-graders/ key puguohao testfilesource test/TestMinHeap package heaps repo ./GradingRepos/repos/labs-puguohao
     [copy] Copying 1 file to /home/coles/git/cse247/cse247-support-f19/GradingRepos/repos/labs-puguohao/labs/heaps/test

BUILD SUCCESSFUL
Total time: 0 seconds
Compiling the code
Buildfile: /home/coles/git/cse247/cse247-support-f19/build.xml

compile:
     [echo] Compiling heaps/MinHeap
    [javac] Compiling 1 source file to /home/coles/git/cse247/cse247-support-f19/GradingRepos/repos/labs-puguohao/bin

BUILD SUCCESSFUL
Total time: 3 seconds
Buildfile: /home/coles/git/cse247/cse247-support-f19/build.xml

compile:
     [echo] Compiling heaps/test/TestMinHeap
    [javac] Compiling 1 source file to /home/coles/git/cse247/cse247-support-f19/GradingRepos/repos/labs-puguohao/bin

BUILD SUCCESSFUL
Total time: 3 seconds
Running test test.TestMinHeap
Buildfile: /home/coles/git/cse247/cse247-support-f19/build.xml

test:
    [junit] Running heaps.test.TestMinHeap
    [junit] Testsuite: heaps.test.TestMinHeap
    [junit] Testing unique size 0
    [junit] done
    [junit] Testing unique size 1
    [junit] done
    [junit] Testing unique size 2
    [junit] done
    [junit] Testing unique size 3
    [junit] done
    [junit] Testing unique size 4
    [junit] done
    [junit] Testing unique size 5
    [junit] done
    [junit] Testing unique size 6
    [junit] done
    [junit] Testing unique size 7
    [junit] done
    [junit] Testing unique size 8
    [junit] done
    [junit] Testing unique size 9
    [junit] done
    [junit] Testing with duplicates size 0
    [junit] done
    [junit] Testing with duplicates size 1
    [junit] done
    [junit] Testing with duplicates size 2
    [junit] done
    [junit] Testing with duplicates size 3
    [junit] done
    [junit] Testing with duplicates size 4
    [junit] done
    [junit] Testing with duplicates size 5
    [junit] done
    [junit] Testing with duplicates size 6
    [junit] done
    [junit] Testing with duplicates size 7
    [junit] done
    [junit] Testing with duplicates size 8
    [junit] done
    [junit] Testing with duplicates size 9
    [junit] done
    [junit] Displaying a correct heap of 50 unique integers:
    [junit]                                                                0                                                               
    [junit]                                2                                                               1                               
    [junit]                3                               4                               6                               7               
    [junit]        18              14              15              5               9               27              8               10      
    [junit]    31      19      24      16      28      25      12      20      13      11      30      41      37      32      22      47  
    [junit]  48  36  39  26  45  35  34  17  40  49  33  29  38  23  44  42  43  46  21
    [junit] 
    [junit] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 6.375 sec
    [junit] Output:
    [junit] Testing unique size 0
    [junit] done
    [junit] Testing unique size 1
    [junit] done
    [junit] Testing unique size 2
    [junit] done
    [junit] Testing unique size 3
    [junit] done
    [junit] Testing unique size 4
    [junit] done
    [junit] Testing unique size 5
    [junit] done
    [junit] Testing unique size 6
    [junit] done
    [junit] Testing unique size 7
    [junit] done
    [junit] Testing unique size 8
    [junit] done
    [junit] Testing unique size 9
    [junit] done
    [junit] Testing with duplicates size 0
    [junit] done
    [junit] Testing with duplicates size 1
    [junit] done
    [junit] Testing with duplicates size 2
    [junit] done
    [junit] Testing with duplicates size 3
    [junit] done
    [junit] Testing with duplicates size 4
    [junit] done
    [junit] Testing with duplicates size 5
    [junit] done
    [junit] Testing with duplicates size 6
    [junit] done
    [junit] Testing with duplicates size 7
    [junit] done
    [junit] Testing with duplicates size 8
    [junit] done
    [junit] Testing with duplicates size 9
    [junit] done
    [junit] Displaying a correct heap of 50 unique integers:
    [junit]                                                                0                                                               
    [junit]                                2                                                               1                               
    [junit]                3                               4                               6                               7               
    [junit]        18              14              15              5               9               27              8               10      
    [junit]    31      19      24      16      28      25      12      20      13      11      30      41      37      32      22      47  
    [junit]  48  36  39  26  45  35  34  17  40  49  33  29  38  23  44  42  43  46  21
    [junit] 
    [junit] 
    [junit] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 6.375 sec
    [junit] ------------- Standard Output ---------------
    [junit] Testing unique size 0
    [junit] done
    [junit] Testing unique size 1
    [junit] done
    [junit] Testing unique size 2
    [junit] done
    [junit] Testing unique size 3
    [junit] done
    [junit] Testing unique size 4
    [junit] done
    [junit] Testing unique size 5
    [junit] done
    [junit] Testing unique size 6
    [junit] done
    [junit] Testing unique size 7
    [junit] done
    [junit] Testing unique size 8
    [junit] done
    [junit] Testing unique size 9
    [junit] done
    [junit] Testing with duplicates size 0
    [junit] done
    [junit] Testing with duplicates size 1
    [junit] done
    [junit] Testing with duplicates size 2
    [junit] done
    [junit] Testing with duplicates size 3
    [junit] done
    [junit] Testing with duplicates size 4
    [junit] done
    [junit] Testing with duplicates size 5
    [junit] done
    [junit] Testing with duplicates size 6
    [junit] done
    [junit] Testing with duplicates size 7
    [junit] done
    [junit] Testing with duplicates size 8
    [junit] done
    [junit] Testing with duplicates size 9
    [junit] done
    [junit] Displaying a correct heap of 50 unique integers:
    [junit]                                                                0                                                               
    [junit]                                2                                                               1                               
    [junit]                3                               4                               6                               7               
    [junit]        18              14              15              5               9               27              8               10      
    [junit]    31      19      24      16      28      25      12      20      13      11      30      41      37      32      22      47  
    [junit]  48  36  39  26  45  35  34  17  40  49  33  29  38  23  44  42  43  46  21
    [junit] 
    [junit] ------------- ---------------- ---------------
    [junit] 
    [junit] Testcase: testViaSorting took 0.267 sec
    [junit] Testcase: testEmptyHeap took 0.047 sec
    [junit] Testcase: testAndPrint took 0.1 sec
    [junit] Testcase: testExtractMin took 0.034 sec
    [junit] Testcase: testLocUpdatedHeapify took 0.017 sec
    [junit] Testcase: testInsert took 0.02 sec
    [junit] Testcase: testUsingHeapSort took 5.805 sec
    [junit] Testcase: testLocUpdatedDecrease took 0 sec

BUILD SUCCESSFUL
Total time: 8 seconds
================
Lab is counted as working
================

CSE247 Robot tester ends testing heaps on 2019-10-14 01:07:15 -0500
-------------------
